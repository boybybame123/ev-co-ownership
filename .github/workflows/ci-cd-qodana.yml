name: CI/CD with H2 & Qodana

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev

jobs:
  build-test:
    name: Build, Test & Package
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Cache Maven dependencies
      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build project
      - name: Build project
        run: mvn clean compile --batch-mode

      # Run tests with H2 profile
      - name: Run tests
        run: mvn test --batch-mode -Dspring.profiles.active=test

      # Package application (skip tests)
      - name: Package application
        if: success()
        run: mvn package --batch-mode -DskipTests

      # Upload build artifact
      - name: Upload build artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: jar-artifact-${{ github.sha }}
          path: target/*.jar
          retention-days: 7

  qodana:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pull-requests: write
      checks: write
      security-events: write

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Cache Maven dependencies
      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build project for Qodana
      - name: Build project
        run: mvn clean compile --batch-mode

      # Run Qodana Scan
      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2025.2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          pr-mode: ${{ github.event_name == 'pull_request' }}
          use-caches: true
          post-pr-comment: ${{ github.event_name == 'pull_request' }}
          use-annotations: true
          upload-result: true
          push-fixes: 'none'
